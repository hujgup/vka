###################
## VKA CHANGELOG ##
###################

## v0.7.1.0 (1)

## Pre-release version number semantics: v0.a.b.c (d)
* a: Added new features.
* b: Changed existing features.
* c: Bugfixes.
* d: Commit number. Starts at 1 and increments every commit. Resets on a new version number.

## v0.7.1.0 (current)
* Updated index page with pre-release information.
* Fixed spelling and quirk mistakes in Aradia pesterlog text.

## v0.7.0.0
* Added the ability to save and load games (no GUI yet).
* Log push methods now keep track of the log history.
* Fixed bug with Scope variable setting from Commands where a COM.String object was being passed instead of an unescaped string.

## v0.6.0.1
* Fixed bug where object interactions did not occur.
* Fixed bug where cfg node association keys and child names were being compared as raw strings in functions like getChildrenNamed.
* Fixed bug where cfg command scripts couldn't update state variables.
* Fixed bug with prototype inheritance causing every X.prototype.constructor property in a chain to be set to the same value.
* Wrote Aradia pesterlog text.

## v0.6.0.0
* Game is now playable.
* Implemented action system GUI.
* Actions now have an @name association, for the user-visible action name.
* Actions can now define custom "Perform Action" button text.
* Rooms can now specify that they should have no actions, only giving the player the option to continue to a specified next action.
* Added game/common/ng/minimap.cfg in preparation for future features.
* Fixed bugs to do with filename cfg elements in loading.
* Fixed bug in EngineCommand.ngCatch where _getConfigStack was sometimes getting called on an undefined node.

## v0.5.0.0
* Added scripted localization for image crediting and audio crediting, so that the artist is mentioned.
* Added "raw text" localization element "r".
* Added parsing support for rooms that have additional custom actions, or custom actions that override the default ones.
* Added public functions for resolving default arguments.
* Added a runtime error logging method.
* Exposed node structure enforcement methods.
* Exposed logging functions.
* EngineError causes should now be more appropriate.
* EngineError config stacks now show what file they occured in, not just the node stack.
* Refactored loading so that parsing methods can report multiple errors.
* Refactored loading so that temporary COM.Map variables aren't exposed to the entire engine.
* Fixed inconsistencies in strictness of cfg structure enforcement.
* Fixed bug where localization files could define custom @ keys, which are reserved by the system.
* Fixed bug where common files could define custom @ keys, which are reserved by the system.
* Fixed bug where escaping trailing whitespace in cfg files was not working properly.
* Changed spec filters so that they hide content as well as navigation links.
* Refactored spec JavaScript to be more maintainable.
* Updated spec with details about the AU, the worlds, an image style guide, extended character data, and a character coloration guide.
* Consolidated spec character data into one table.
* Changed version numbering semantics: Added trailing component detailing commit number, starting from 1 (so that I can push to Git while in the middle of writing an update). "b" component now used for refactors.

## v0.4.4.0
* Allowed images in gfx/app to be in subfolders.
* Allowed users to specify certain images that should not be interpolated during resizing.
* Added sylladex images.

## v0.4.3.0
* Made tag filters case insentitive.

## v0.4.2.0
* Added ability to make a link to an entered filter in the image spec.

## v0.4.1.0
* A pre-set filter can not be part of the image spec URL through the "filter" query string key.
* Fixed spelling error in image spec.
* Fixed numbering format consistency im image spec body.

## v0.4.0.1
* Added character tags to more nodes in the image spec.
* Fixed bug where the negation filter in the image spec was not working properly.

## v0.4.0.0
* Added image consistency specification (for image commissions).
* Mipmapping now works.
* Images are now displayed where appropriate, and source linking has been implemented.
* Added @move command that traverses graph edges, and won't move unless an edge exists.
* Renamed ACTION_MOVE const to ACTION_TELEPORT to reduce confusion.

## v0.3.0.1
* PHP code now returns status code 500 if an uncaught exception propagates to the return level.

## v0.3.0.0
* Mipmapping architecture setup.

## v0.2.4.4
* Made a bunch of publically-viewable stuff immutable in ng.js (including entire Engine object).

## v0.2.4.3
* Removed game/common/app/worlds.cfg and moved contents into a comment in game.common/ng/state.cfg.

## v0.2.4.2
* Organized how ng.js is laid out.
* Added headings to ng.js sections.

## v0.2.4.1
* Fixed lots of bugs with execution statements.
* Fixed image size being too large when no image is specified.
* Made some of the sub-command overload protocols more sane.
* Fixed gfx user directory being named wrong.

## v0.2.4.0
* Made engine-defined cfg child contents strict (i.e. will throw exceptions if it finds something unexpected).

## v0.2.3.0
* Modified U.I. so that the space allocated to an image is dynamic.
* Allowed page title to be set in localization files.
* Now enforcing that engine-defined localization strings are present.

## v0.2.2.0
* Defined all execution statements.

## v0.2.1.0
* Defined all execution statements except var set and the global actions.

## v0.2.0.0
* Full common/ng parsing.
* Started defining execution statements.
* Fixed bug where script/ng/io/loadNg.php was not working because JS was passing in the full path and PHP expected a partial path.
* Refinement of cfg execution statement syntax.

## v0.1.2.2
* Changed how variable getting/setting is defined because I briefly forgot how my file format works.

## v0.1.2.1
* Added more const strings for mathematical operations and variable getting/setting.
* common/ng/x loading script created.

## v0.1.2.0
* Scoping set up.
* Added more const strings for locical operations.
* Restructured game/common/ng so that users can define multiple files of each type.

## v0.1.1.2
* Engine string constants are now defined in Engine.Consts, instead of wherever they were being used.

## v0.1.1.1
* All engine-defined .cfg things are now preceded by "@" to distinguish them from user-defined things.

## v0.1.1.0
* Made localization element parsing more general.
* Logging methods now retain references.
* Logging methods now scroll the log to the first new element added.
* Added Homestuck styling to log.
* Fixed bug with COM association parsing and escaped = symbols in values.

## v0.1.0.0
* Localization parsing added.
* Added default image.
* Restructured localization folder.
* COM.String added.
* Swapped COM string outputs to report COM.String.
* User stylesheet parsing added.

## v0.0.2.1
* Localized hash map modus.
* Began work on combination moduses.

## v0.0.2.0
* Added test case for room images.
* Updated localization with new engine strings.
* Moved global.css out of root scope for game/index.html.
* Removed reference to deleted file in game/index.html.
* Config Object Model: COM.String class defined.

## v0.0.1.0
* "game/script" folder structure laid out.
* "game/style" folder structure laid out.
* Index page layout first pass.
* Renamed "game/config" to "game/common".

## v0.0.0.0
* Initial commit.
* Basic folder structure laid out.
* Index page created but not styled.